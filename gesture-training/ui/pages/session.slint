import { VerticalBox, HorizontalBox, Palette, Slider, StyleMetrics } from "std-widgets.slint";
import { CustomPalette, Icons, Button, Timer } from "../widgets/widgets.slint";
import { PreparedSessionData } from "common.slint";

export enum SessionWindowState {
    Running,
    Loading,
    Completed,
}

export global SessionNative {
    callback on-session-start();
    callback on-session-stop();
    callback next-image();
    callback previous-image();
    callback on-image-displayed();
    callback on-play-mode-changed(bool);
}

export component SessionWindow inherits Rectangle {
    in-out property<image> current-image;
    in-out property time-left <=> timer.time-left;
    in property<SessionWindowState> state: SessionWindowState.Completed;

    callback exit-session <=> button_quit.clicked;

    in-out property<bool> expand-menu: false;

    public function prepare-start-session(prepared-session-data: PreparedSessionData) {
        expand-menu = false;
        timer.time-total = prepared-session-data.image-duration;
        time-left = prepared-session-data.image-duration;
    }

    public function show-image(img: image) {
        current-image = img;
        timer.is-playing = true;
        SessionNative.on-image-displayed();
    }

    if state == SessionWindowState.Running: Image {
        width: 100%;
        height: 100%;
        image-fit: contain;
        source <=> root.current-image;
    }

    if state == SessionWindowState.Loading: Image {
        width: 100%;
        height: 100%;
        image-fit: contain;
        source: @image-url("../images/loading.jpg");
    }

    if state == SessionWindowState.Completed: Image {
        width: 100%;
        height: 100%;
        
        image-fit: contain;
        source: @image-url("../images/loading.jpg");
    }

    Button {
        icon: Icons.more-horizontal-square;
        width: 32px;
        height: 32px;
        x: 8px;
        y: 8px;

        clicked => {
            expand-menu = !expand-menu;
        }
    }

    button-quit := Button {
        visible: expand-menu;
        icon: Icons.square;
        width: 32px;
        height: 32px;
        x: (root.width - self.width) * 0.5;
        y: root.height - self.height - 50px - 50px - 32px;
        text: "Quit";
    }

    timer := Timer {
        go-to-next-image => {
            SessionNative.next-image();
        }
        go-to-previous-image => {
            SessionNative.previous-image();
        }
        play-mode-changed(is-playing) => {
            SessionNative.on-play-mode-changed(is-playing);
        }

        x: (root.width - self.width) * 0.5;
        y: root.height - self.height - 50px;
    }
}