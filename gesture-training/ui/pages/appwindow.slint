import { Button, VerticalBox, StandardListView, HorizontalBox, Palette, StyleMetrics } from "std-widgets.slint";
import { MainMenu } from "main-menu.slint";
import { RadioBox, EditSourceFolderDialog, CustomPalette } from "../widgets/widgets.slint";

enum AppFlow {
    MainMenu,
    EditSource_Folder,
}

export component AppWindow inherits Window {
    in-out property<AppFlow> app-flow: AppFlow.MainMenu;

    title: "Gesture Training";
    Rectangle {
        background: Palette.alternate-background;
    }

    Rectangle {
        width: 100%;
        height: 100%;

        Rectangle {
            width: min(CustomPalette.preferred-form-width, root.width);
            height: main-menu.preferred-height;

            main-menu := MainMenu {
                show-add-source-folder => { app-flow = AppFlow.EditSource_Folder; }
                open-source-editor(data, index) => {  app-flow = AppFlow.EditSource_Folder; }
            } 
        }
    }

    Rectangle {
        width: 100%;
        height: 100%;

        modal-overlay := Rectangle {
            opacity: 0;
            background: Palette.background;

            animate opacity {
                duration: 200ms;
            }
        }

        modal-background := Rectangle {
            
            background: Palette.alternate-background;
            border-color: Palette.background;
            border-radius: CustomPalette.border;

            width: modal-width() * 1.25;
            height: modal-height() * 1.25;

            opacity: 0;
            animate opacity, width, height {
                duration: 200ms;
            }

            dialog-edit-source-folder := EditSourceFolderDialog {
                visible: false;
                cancel => { app-flow = AppFlow.MainMenu; }
            }
        }
    }

    states [
        edit-source-folder when app-flow == AppFlow.EditSource_Folder: {
            modal-overlay.opacity: 0.9;
            modal-background.opacity: 1;

            modal-background.width: modal-width();
            modal-background.height: modal-height();

            dialog-edit-source-folder.visible: true;
        }
        main-menu when app-flow == AppFlow.MainMenu: {
            main-menu.enabled: true;
        }
    ]

    pure function modal-width() -> length {
        min(CustomPalette.preferred-form-width, root.width)
    }
    pure function modal-height() -> length {
        dialog-edit-source-folder.preferred-height
    }
}