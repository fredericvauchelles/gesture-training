import { Palette, HorizontalBox, VerticalBox } from "std-widgets.slint";
import { CustomDialog } from "dialog.slint";
import { Button } from "button.slint";
import { Label } from "label.slint";
import { StatusData, StatusType } from "status-icon.slint";
import { CustomPalette, Icons } from "styling.slint";

export struct FolderSourceData {
    id: int,
    name: string,
    path: string,
    image-count: int,
    status: StatusData,
}

export component EditSourceFolderDialog inherits VerticalBox {
    callback on-add-or-save;
    callback cancel;
    callback delete(int);

    /** Native Functions */
    callback get-folder-source-data-from-index(int) -> FolderSourceData;
    callback is-folder-source-data-from-index-valid(int) -> bool;
    callback add-or-save-folder-source(FolderSourceData);
    callback open-file-dialog <=> open_file_dialog_button.clicked;
    /** End Native Functions */

    out property<bool> is-add;
    in-out property<FolderSourceData> source;

    public function setup-add() {
        is-add = true;
        source = {
            name: "Unnamed",
            path: "path/to/folder",
            image-count: 0,
            status: {
                type: StatusType.Unknown
            },
        };
    }

    public function setup-edit(source-index: int) -> bool {
        if (!is-folder-source-data-from-index-valid(source-index)) {
            return false;
        }

        source = get-folder-source-data-from-index(source-index);
        is-add = false;
        return true;
    }

    Rectangle {
        border-radius: CustomPalette.border;

        VerticalBox {
            spacing: 0;

            Label {
                text: is-add ? "Add Folder" : "Edit Folder";
            }

            // space
            Rectangle {
                height: 4px;
            }
            
            Rectangle {
                height: CustomPalette.preferred-field-height;
                background: Palette.control-background;
                border-top-left-radius: CustomPalette.border;
                border-top-right-radius: CustomPalette.border;
                border-width: CustomPalette.border-width;
                border-color: Palette.background;

                HorizontalBox {
                    Text {
                        text: "Name";
                        vertical-alignment: center;
                    }
                    TextInput {
                        horizontal-alignment: right;
                        vertical-alignment: center;
                        text: source.name;
                        color: Palette.control-foreground.darker(25%);
                    }
                    Rectangle {
                        width: CustomPalette.preferred-icon-size;
                    }
                }
            }

            Rectangle {
                height: CustomPalette.preferred-field-height;
                background: Palette.control-background;
                border-width: CustomPalette.border-width;
                border-color: Palette.background;

                HorizontalBox {
                    Text {
                        text: "Folder Path";
                        vertical-alignment: center;
                    }
                    Text {
                        horizontal-alignment: right;
                        vertical-alignment: center;
                        text: source.path;
                        color: Palette.control-foreground.darker(25%);
                    }
                    open_file_dialog_button := Button {
                        icon: Icons.edit;
                        width: CustomPalette.preferred-icon-size;
                        height: CustomPalette.preferred-icon-size;
                        padding: 0;
                    }
                }
            }

            Rectangle {
                height: CustomPalette.preferred-field-height;
                background: Palette.control-background;
                border-width: CustomPalette.border-width;
                border-color: Palette.background;

                HorizontalBox {
                    Text {
                        text: "Image Count";
                        vertical-alignment: center;
                    }
                    Text {
                        horizontal-alignment: right;
                        vertical-alignment: center;
                        text: source.status.type == StatusType.Valid 
                            ? source.image-count 
                            : "?";
                        color: Palette.control-foreground.darker(25%);
                    }
                    Rectangle {
                        width: CustomPalette.preferred-icon-size;
                        height: CustomPalette.preferred-icon-size;
                    }
                }
            }

            if !root.is-add : Rectangle {
                height: CustomPalette.preferred-field-height;
                background: Palette.control-background;
                border-width: CustomPalette.border-width;
                border-color: Palette.background;

                HorizontalBox {
                    padding-right: 0;
                    padding-top: 0;
                    padding-bottom: 0;
                    Text {
                        text: "Delete";
                        vertical-alignment: center;
                    }
                    Button {
                        width: CustomPalette.preferred-field-height * 3;
                        icon: Icons.minus-circle;
                        padding: 0;
                        text: "Delete";
                        content-color: red;
                        border-radius: 0;
                        clicked => { delete(source.id); }
                    }
                }
            }

            Rectangle {
                background: Palette.control-background;
                border-bottom-left-radius: CustomPalette.border;
                border-bottom-right-radius: CustomPalette.border;

                HorizontalBox {
                    padding: 0;
                    spacing: 0;

                    Button {
                        height: CustomPalette.preferred-field-height;
                        icon: Icons.plus-circle;
                        text: is-add ? "Add" : "Save";
                        border-top-left-radius: 0;
                        border-top-right-radius: 0;
                        border-bottom-right-radius: 0;

                        clicked => { 
                            add-or-save-folder-source(source);
                            on-add-or-save();
                        }
                    }
                    Button {
                        icon: Icons.minus-circle;
                        text: "Cancel";
                        content-color: Palette.foreground;
                        border-top-left-radius: 0;
                        border-top-right-radius: 0;
                        border-bottom-left-radius: 0;

                        clicked => { cancel(); }
                    }
                }
            }
        }
    }
}