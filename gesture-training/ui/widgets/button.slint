import { Palette, HorizontalBox } from "std-widgets.slint";
import { CustomPalette } from "styling.slint";

export component Button inherits Rectangle {
    in property<bool> enabled: true;
    in-out property<image> icon;
    in-out property<string> text;
    in-out property<bool> colorize-icon: false;

    callback clicked;

    min-height: CustomPalette.border;
    min-width: max(32px, layout.min-width);

    border-radius:CustomPalette.border;
    background: Palette.control-background;
    border-width: 1px;
    border-color: Palette.background;
    animate background {
        duration: 50ms;
    }
    
    layout := HorizontalBox {
        alignment: center;
        
        if (root.icon.width > 0 && root.icon.height > 0): Image {
            width: 20px;
            source <=> root.icon;
            image-fit: contain;
            colorize: Palette.foreground;
        } 
        if (root.text != ""): Text { 
            color: Palette.foreground;
            text: root.text;

            states [
                disabled-pressed when !enabled && touch.pressed: {
                    color: Palette.foreground.darker(25%);
                }
                disabled-hover when !enabled && touch.has-hover: {
                    color: Palette.alternate-foreground.darker(25%);
                }
                disabled when !enabled: {
                    color: Palette.foreground.darker(25%);
                }

                normal-pressed when touch.pressed: {
                    color : Palette.foreground;
                }
                normal-hover when touch.has-hover: {
                    color : Palette.alternate-foreground;
                }
            ]
        }
    }
    touch := TouchArea {
        clicked => {
            if enabled {
                root.clicked();
            }
        }
    }

    states [
        disabled-pressed when !enabled && touch.pressed: {
            background: Palette.background.darker(25%);
        }
        disabled-hover when !enabled && touch.has-hover: {
            background: Palette.alternate-background.darker(25%);
        }
        disabled when !enabled: {
            background: Palette.control-background.darker(25%);
        }

        normal-pressed when touch.pressed: {
            background: Palette.background;
        }
        normal-hover when touch.has-hover: {
            background: Palette.alternate-background;
        }
    ]
}